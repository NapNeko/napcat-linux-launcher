name: Build NapCat Linux Launcher

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build Launcher on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        arch: [x64, arm64]
        include:
          - arch: x64
            gcc_arch: ""
            output_name: "libnapcat_launcher_amd64.so"
          - arch: arm64
            gcc_arch: "aarch64-linux-gnu-"
            output_name: "libnapcat_launcher_arm64.so"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build launcher in Ubuntu 20.04 (glibc 2.31)
      run: |
        docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ubuntu:20.04 bash -c "
          apt-get update &&
          DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential gcc-aarch64-linux-gnu g++-aarch64-linux-gnu &&
          if [ '${{ matrix.arch }}' = 'x64' ]; then
            g++ -shared -fPIC -ldl -o ${{ matrix.output_name }} launcher.cpp;
          else
            aarch64-linux-gnu-g++ -shared -fPIC -ldl -o ${{ matrix.output_name }} launcher.cpp;
          fi
        "

    - name: Test file exists
      run: ls -la ${{ matrix.output_name }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: napcat-launcher-${{ matrix.arch }}
        path: ${{ matrix.output_name }}
        retention-days: 7